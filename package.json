{
  "name": "javadoc-comment-generator",
  "displayName": "Javadoc Comment Generator",
  "description": "An extension to generate Javadoc Comments, both manually and using ChatGPT",
  "author": "Kavin Muralikrishnan",
  "publisher": "Advay",
  "license": "GPL-3.0-only",
  "repository": {
    "type": "git",
    "url": "github.com/Advay17/javadoc-comment-generator"
  },
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.85.1"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "javadoc-comment-generator.generateCommentsForFile",
        "title": "Generate Comments for this File",
        "category": "Javadoc Comment Generator"
      },
      {
        "command": "javadoc-comment-generator.updateCommentsForFile",
        "title": "Update Comments for this File",
        "category": "Javadoc Comment Generator"
      },
      {
        "command": "javadoc-comment-generator.deleteJavaDocComments",
        "title": "Delete all Javadoc Comments in this File",
        "category": "Javadoc Comment Generator"
      }
    ],
    "configuration": {
      "title": "Javadoc Comment Generator",
      "properties": {
        "javadoc-comment-generator.includeOverridingMethods": {
          "title": "Generate Comments for Overriding Methods",
          "type": "boolean",
          "default": "true",
          "description": "Determines if overriding methods should still have comments generated."
        },
        "javadoc-comment-generator.useDeprecationTemplate": {
          "title": "Use the Recommended Template for Generating Deprecated Methods",
          "type": "boolean",
          "default": "true",
          "description": "Use the template '@deprecated Use {@link (METHODPATH)} instead' when generating deprecation comments"
        },
        "javadoc-comment-generator.generateCommentsForMainMethod": {
          "title": "Generate Comments for Main Method",
          "type": "boolean",
          "default": "true",
          "description": "Determines if comments should be generated for the main method."
        },
        "javadoc-comment-generator.generateNewWhileUpdatingOld": {
          "title": "Generate New Comments While Updating Old Comments",
          "type": "boolean",
          "default": "false",
          "description": "Determines if methods without comments should have comments generated while updating old methods."
        },
        "javadoc-comment-generator.maxCharactersPerLine": {
          "title": "Maximum Characters Per Line",
          "type": "integer",
          "description": "The maximum characters per comment line, including indents.",
          "default": "120"
        },
        "javadoc-comment-generator.generateAISuggestion": {
          "title": "Generate AI Suggestions",
          "type": "boolean",
          "default": "false",
          "description": "Determines if AI suggestions for descriptions should be shown."
        },
        "javadoc-comment-generator.openAIKey": {
          "title": "OpenAI Key",
          "type": "string",
          "description": "OpenAI key to generate ChatGPT suggestions."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.9",
    "@types/node": "20.x",
    "@types/vscode": "^1.85.1",
    "@typescript-eslint/eslint-plugin": "^8.10.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.13.0",
    "typescript": "^5.6.3"
  },
  "extensionDependencies": [
    "redhat.java"
  ],
  "dependencies": {
    "openai": "^4.76.0"
  }
}
